{
  "name": "haw",
  "version": "0.2.17",
  "bin": {
    "haw": "./bin/haw"
  },
  "dependencies": {
    "clean-css": "~1.0.12",
    "coffee-script": "~1.6.3",
    "easy-exec": "~0.0.5",
    "eco": "~1.1.0-rc-3",
    "express": "~3.1.0",
    "express-prettylogger": "~0.1.2",
    "glob": "~3.2.6",
    "handlebars": "~1.0.12",
    "mime": "~1.2.11",
    "nib": "~0.9.1",
    "optimist": "~0.3.5",
    "stylus": "~0.37.0",
    "uglify-js": "~2.4.0",
    "webmake": "~0.3.20",
    "webmake-coffee": "~0.1.1",
    "which": "~1.0.5",
    "wrench": "~1.4.4"
  },
  "license": "Apache 2.0",
  "readme": "An alternative to `hem`\n\n```\nnpm install haw\nhaw help\n```\n\nAll commands can be given a `--config` option. By default, haw will attempt to load `slug.{json,js,coffee}` in the current working directory.\n\n`haw init [type] [name]`\n========================\n\nThis generates folders and files based on the `init` property of your config. By default, it builds out MVC-ish kinda stuff (defined in `lib/default-inits`).\n\nYou can specify a type of thing to init, like, a controller or a model or what-have-you, and a name to pass into its templates. Running `haw init controller SomeController` will build out the structure defined in `(config).init.controller` with `\"SomeController\"` available in its templates as `name`. Templates are in Handlebars.\n\nIf not given a type and name, `haw init` will build the structure defined in `(config).init.default`.\n\n`haw serve [port]`\n==================\n\nThis runs a development server.\n\nBy default, it'll serve static files out of the `public` directory. You can change this with the `mount` config property.\n\nBy default, it'll generate `/main.js` from `app/main.coffee` and provide `require` function to load modules.\n\nBy default, it'll generate `/main.css` from `css/main.styl`, inlining in any `@import` statements.\n\nChange these with the `generate` config property, and modify the `compile` config properties to change how things are compiled.\n\n`haw build [output]`\n====================\n\nThis will copy your `(config).mount` directories into a build directory, generate files in `(config).generate`, optimize JS, CSS, and images in the build directory, timestamp filenames and rename their references as defined in `(config).timestamp`.\n\nPush the build directory to S3 or whatever and you've got yourself a web site.\n",
  "readmeFilename": "README.md",
  "description": "An alternative to `hem`",
  "_id": "haw@0.2.17",
  "_from": "haw@~0.2.4"
}
